#!/bin/bash
# Argument = -h (shows the help information)
# Argument = -o (option .i.e create, remove)
# Argument = -n (name of the new tomcat instance .i.e ulyaoth)
# Argument = -u (optional: user that will run tomcat .i.e ulyaoth, default is tomcat)

usage()
{
cat << EOF
usage: $0 options

OPTIONS:
   -h  Shows this help information
   -o  Option (.i.e create, remove)
   -n  name of the new tomcat instance (.i.e ulyaoth)
   -u  optional: user that will run tomcat (.i.e ulyaoth) (default is tomcat)
EOF
}

#Create the instance
create()
{
if grep -q -i "release 6" /etc/redhat-release &>/dev/null || grep -q -i "Amazon" /etc/system-release &>/dev/null
then
cat >/etc/sysconfig/tomcat@${name} <<EOF
export TOMCAT_CFG_LOADED=1
export CATALINA_HOME="/opt/tomcat"
export CATALINA_BASE="/var/lib/tomcats/${name}"
export CATALINA_TMPDIR="/var/lib/tomcats/${name}/temp"
export TOMCAT_USER="${user}"
export CATALINA_PID="/var/lib/tomcats/${name}/pid/tomcat.pid"
EOF

cat <<'EOF' >> /etc/init.d/tomcat-${name}
#!/bin/bash
#
# tomcat     This shell script takes care of starting and stopping Tomcat
#
# chkconfig: - 80 20
#
### BEGIN INIT INFO
# Provides: tomcat-ULYAOTH
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Short-Description: start and stop tomcat-ULYAOTH
### END INIT INFO

source /etc/sysconfig/tomcat@ULYAOTH
 
#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m}"
 
#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=20
 
tomcat_pid() {
        echo `ps -fe | grep $CATALINA_BASE | grep -v grep | tr -s " "|cut -d" " -f2`
}
 
start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mTomcat is already running (pid: $pid)\e[00m"
  else
    # Start tomcat
    echo -e "\e[00;32mStarting tomcat\e[00m"
    #ulimit -n 100000
    #umask 007
    #/bin/su -p -s /bin/sh $TOMCAT_USER
        if [ `user_exists $TOMCAT_USER` = "1" ]
        then
                /bin/su $TOMCAT_USER -c $CATALINA_HOME/bin/startup.sh
        else
                echo -e "\e[00;31mTomcat user $TOMCAT_USER does not exists. Starting with $(id)\e[00m"
                sh $CATALINA_HOME/bin/startup.sh
        fi
        status
  fi
  return 0
}
 
status(){
          pid=$(tomcat_pid)
          if [ -n "$pid" ]
            then echo -e "\e[00;32mTomcat is running with pid: $pid\e[00m"
          else
            echo -e "\e[00;31mTomcat is not running\e[00m"
            return 3
          fi
}

terminate() {
	echo -e "\e[00;31mTerminating Tomcat instance named ${name}\e[00m"
	kill -9 $(tomcat_pid)
}

stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo -e "\e[00;31mStoping Tomcat\e[00m"
    #/bin/su -p -s /bin/sh $TOMCAT_USER
        sh $CATALINA_HOME/bin/shutdown.sh
 
    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\n\e[00;31mwaiting for processes to exit\e[00m";
      sleep 1
      let count=$count+1;
    done
 
    if [ $count -gt $kwait ]; then
      echo -n -e "\n\e[00;31mkilling processes didn't stop after $SHUTDOWN_WAIT seconds\e[00m"
      terminate
    fi
  else
    echo -e "\e[00;31mTomcat is not running\e[00m"
  fi
 
  return 0
}
 
user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}
 
case $1 in
	start)
	  start
	;;
	stop)  
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
		exit $?  
	;;
	kill)
		terminate
	;;		
	*)
		echo -e $TOMCAT_USAGE
	;;
esac
exit 0
EOF

sed -i s/ULYAOTH/${name}/g /etc/init.d/tomcat-${name} &>/dev/null
chmod +x /etc/init.d/tomcat-${name}
chkconfig tomcat-${name} on
else
cat >/etc/sysconfig/tomcat@${name} <<EOF
TOMCAT_CFG_LOADED=1
CATALINA_HOME="/opt/tomcat"
CATALINA_BASE="/var/lib/tomcats/${name}"
CATALINA_TMPDIR="/var/lib/tomcats/${name}/temp"
TOMCAT_USER="${user}"
CATALINA_PID="/var/lib/tomcats/${name}/pid/tomcat.pid"
EOF

systemctl enable tomcat@${name}.service &>/dev/null

sed -i s/User=tomcat/User=${user}/g /etc/systemd/system/multi-user.target.wants/tomcat@${name}.service &>/dev/null
systemctl daemon-reload
fi

mkdir -p /var/log/tomcat/${name}
mkdir -p /var/lib/tomcats/${name}
mkdir -p /var/lib/tomcats/${name}/work
mkdir -p /var/lib/tomcats/${name}/temp
mkdir -p /var/lib/tomcats/${name}/webapps
mkdir -p /var/lib/tomcats/${name}/pid
ln -s /var/log/tomcat/${name} /var/lib/tomcats/${name}/logs
cp -rf /opt/tomcat/conf /var/lib/tomcats/${name}/
chown -R ${user}:${user} /var/log/tomcat/${name}
chown -R ${user}:${user} /var/lib/tomcats/${name}

}

#Remove the instance
remove()
{
if grep -q -i "release 6" /etc/redhat-release &>/dev/null || grep -q -i "Amazon" /etc/system-release &>/dev/null
then
/etc/init.d/tomcat-${name} stop &>/dev/null
chkconfig tomcat-${name} off &>/dev/null
rm -rf /etc/init.d/tomcat-${name} &>/dev/null
else
systemctl stop tomcat@${name}.service &>/dev/null
systemctl disable tomcat@${name}.service &>/dev/null
fi

rm -rf /var/lib/tomcats/${name}
rm -rf /var/log/tomcat/${name}
rm -rf /etc/sysconfig/tomcat@${name}

}



name=
user=tomcat

while getopts h:o:n:u: opt; do
case $opt in
h)
  usage
;;
o)
  option=$OPTARG
;;
n)
  name=$OPTARG
;;
u)
  user=$OPTARG
;;
esac
done

$option

if [ "$option" == "create" ]
then
  create
echo "Your tomcat instance has been successfully created."
exit 1
elif [ "$option" == "remove" ]
then
remove
  echo "Your tomcat instance has been successfully removed."
exit 1
else
  usage
exit 1
fi